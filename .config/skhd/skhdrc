#!/usr/bin/env sh

# open apps or other stuff
cmd - return    : /Applications/kitty.app/Contents/MacOS/kitty --single-instance $HOME
cmd + shift - f : open -R $HOME
# cmd + shift - w : /Applications/LibreWolf.app/Contents/MacOS/librewolf-bin

# screenshots
alt + cmd - 0         : scr -i
alt + cmd + shift - 0 : scr

# # cycle forwards
# alt - tab : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $has_index > 0 then nth($has_index - 1).id else nth($array_length - 1).id end'  \
#   | xargs -I{} yabai -m window --focus {}

# # cycle backwards
# alt + shift - tab : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $array_length - 1 > $has_index then nth($has_index + 1).id else nth(0).id end' \
#   | xargs -I{} yabai -m window --focus {}

# restart, quit, or start yabai
cmd + shift - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# toggles
cmd + shift - b      : toggle_bar
cmd + shift - d      : yabai_border
cmd - 0x29           : yabai -m space --padding rel:-5:-5:-5:-5 ; yabai -m space --gap rel:-5
cmd - 0x27           : yabai -m space --padding rel:5:5:5:5 ; yabai -m space --gap rel:5
cmd + shift - p      : ~/.config/scripts/yabai_gaps
ctrl + shift - space : yabai -m window --toggle float && sketchybar --trigger window_focus && yabai -m window --grid 4:4:1:1:2:2 && /tmp/yabai-restore/$(yabai -m query --windows --window | jq -re '.id').restore 2>/dev/null || true
# cmd + shift - space  : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" elif .type == "float" then "stack" else "bsp" end')
cmd + shift - space  : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "stack" else "bsp" end') && sketchybar --trigger window_focus
ctrl + shift - i     : yabai -m window --toggle split
ctrl + shift - s     : yabai -m window --toggle sticky
ctrl + shift - t     : yabai -m window --toggle topmost

# toggle margin of sketchybar
cmd + ctrl - b : CURRENT="$(sketchybar --query bar | jq -r '.y_offset')"; \
                  if [ "$CURRENT" -eq "0" ]; then \
                    yabai -m config external_bar all:49:0; \
                    sketchybar --animate sin 15 --bar margin=10 y_offset=10 corner_radius=9; \
                  else \
                    yabai -m config external_bar all:39:0; \
                    sketchybar --animate sin 15 --bar margin=0 y_offset=0 corner_radius=0; \
                  fi \

# focus node
cmd - h : yabai -m window --focus west
cmd - j : yabai -m window --focus south
cmd - k : yabai -m window --focus north
cmd - l : yabai -m window --focus east

# focus space
cmd - 1 : yabai_focus 1
cmd - 2 : yabai_focus 2
cmd - 3 : yabai_focus 3
cmd - 4 : yabai_focus 4
cmd - 5 : yabai_focus 5
cmd - 6 : yabai_focus 6
cmd - 7 : yabai_focus 7
cmd - 8 : yabai_focus 8
cmd - 9 : yabai_focus 9
cmd - 0 : yabai_focus 10

# delete current space
cmd + shift - w : yabai -m space --destroy

# swap current and biggest node
cmd + shift - return : \
	    largest_id=$(yabai -m query --windows --window largest | jq -r '.id');\
	    current_id=$(yabai -m query --windows --window | jq -r '.id');\
	    if [ "$largest_id" != "$current_id" ]; then\
	      echo "$largest_id" > "${TMPDIR}/yabai_last_window_swapped_wid";\
	      yabai -m window --swap largest;\
	    elif test -f "${TMPDIR}/yabai_last_window_swapped_wid"; then\
	      yabai -m window --swap $(cat "${TMPDIR}/yabai_last_window_swapped_wid");\
	    fi;

# warp node
cmd + shift - h : yabai -m window --warp west
cmd + shift - j : yabai -m window --warp south
cmd + shift - k : yabai -m window --warp north
cmd + shift - l : yabai -m window --warp east

# # warp node to space
# cmd + shift - 1 : yabai -m window --space 1 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 2 : yabai -m window --space 2 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 3 : yabai -m window --space 3 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 4 : yabai -m window --space 4 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 5 : yabai -m window --space 5 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 6 : yabai -m window --space 6 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 7 : yabai -m window --space 7 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 8 : yabai -m window --space 8 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 9 : yabai -m window --space 9 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update
# cmd + shift - 0 : yabai -m window --space 10 || { yabai -m space --create && yabai -m window --space last } && sketchybar --update

# warp node to space
cmd + shift - 1 : yabai -m window --space 1 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 2 : yabai -m window --space 2 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 3 : yabai -m window --space 3 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 4 : yabai -m window --space 4 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 5 : yabai -m window --space 5 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 6 : yabai -m window --space 6 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 7 : yabai -m window --space 7 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 8 : yabai -m window --space 8 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 9 : yabai -m window --space 9 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces
cmd + shift - 0 : yabai -m window --space 10 || { yabai -m space --create && yabai -m window --space last } && sketchybar --trigger windows_on_spaces



# resize node
ctrl + shift - a : yabai_resize west
ctrl + shift - s : yabai_resize south
ctrl + shift - w : yabai_resize north
ctrl + shift - d : yabai_resize east
ctrl + shift - b : yabai -m space --balance

# passthrough mode
:: passthrough
ctrl + shift - p ; passthrough
passthrough < ctrl + shift - p ; default

# blacklist apps
.blacklist [
    "Roblox"
]
